var searchIndex = JSON.parse('{\
"arch":{"doc":"","t":[5],"n":["main"],"q":["arch"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"base32":{"doc":"","t":[5],"n":["main"],"q":["base32"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"base64":{"doc":"","t":[5],"n":["main"],"q":["base64"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"basename":{"doc":"","t":[5],"n":["main"],"q":["basename"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"basenc":{"doc":"","t":[5],"n":["main"],"q":["basenc"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cat":{"doc":"","t":[5],"n":["main"],"q":["cat"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chcon":{"doc":"","t":[5],"n":["main"],"q":["chcon"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chgrp":{"doc":"","t":[5],"n":["main"],"q":["chgrp"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chmod":{"doc":"","t":[5],"n":["main"],"q":["chmod"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chown":{"doc":"","t":[5],"n":["main"],"q":["chown"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chroot":{"doc":"","t":[5],"n":["main"],"q":["chroot"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cksum":{"doc":"","t":[5],"n":["main"],"q":["cksum"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"comm":{"doc":"","t":[5],"n":["main"],"q":["comm"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"coreutils":{"doc":"","t":[6,17,5,5,5,5,5,5,5,5],"n":["UtilityMap","VERSION","binary_path","gen_completions","gen_coreutils_app","gen_manpage","main","name","usage","util_map"],"q":["coreutils","","","","","","","","",""],"d":["","","","Prints completions for the utility in the first parameter …","","Generate the manpage for the utility in the first parameter","","","",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,[[],1],[[2,3],4],[3,5],[[2,3],4],[[]],[6,7],[[3,7]],[[],[[3,[7]]]]],"p":[[3,"PathBuf"],[8,"Iterator"],[3,"Map"],[15,"never"],[3,"Command"],[3,"Path"],[15,"str"]]},\
"cp":{"doc":"","t":[5],"n":["main"],"q":["cp"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"csplit":{"doc":"","t":[5],"n":["main"],"q":["csplit"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cut":{"doc":"","t":[5],"n":["main"],"q":["cut"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"date":{"doc":"","t":[5],"n":["main"],"q":["date"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dd":{"doc":"","t":[5],"n":["main"],"q":["dd"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"df":{"doc":"","t":[5],"n":["main"],"q":["df"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dir":{"doc":"","t":[5],"n":["main"],"q":["dir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dircolors":{"doc":"","t":[5],"n":["main"],"q":["dircolors"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dirname":{"doc":"","t":[5],"n":["main"],"q":["dirname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"du":{"doc":"","t":[5],"n":["main"],"q":["du"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"echo":{"doc":"","t":[5],"n":["main"],"q":["echo"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"env":{"doc":"","t":[5],"n":["main"],"q":["env"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"expand":{"doc":"","t":[5],"n":["main"],"q":["expand"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"expr":{"doc":"","t":[5],"n":["main"],"q":["expr"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"factor":{"doc":"","t":[5],"n":["main"],"q":["factor"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"false":{"doc":"","t":[5],"n":["main"],"q":["false"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fmt":{"doc":"","t":[5],"n":["main"],"q":["fmt"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fold":{"doc":"","t":[5],"n":["main"],"q":["fold"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"groups":{"doc":"","t":[5],"n":["main"],"q":["groups"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hashsum":{"doc":"","t":[5],"n":["main"],"q":["hashsum"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"head":{"doc":"","t":[5],"n":["main"],"q":["head"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hostid":{"doc":"","t":[5],"n":["main"],"q":["hostid"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hostname":{"doc":"","t":[5],"n":["main"],"q":["hostname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"id":{"doc":"","t":[5],"n":["main"],"q":["id"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"install":{"doc":"","t":[5],"n":["main"],"q":["install"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"join":{"doc":"","t":[5],"n":["main"],"q":["join"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"kill":{"doc":"","t":[5],"n":["main"],"q":["kill"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"libstdbuf":{"doc":"","t":[5],"n":["__stdbuf"],"q":["libstdbuf"],"d":["Safety"],"i":[0],"f":[[[]]],"p":[]},\
"link":{"doc":"","t":[5],"n":["main"],"q":["link"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"ln":{"doc":"","t":[5],"n":["main"],"q":["ln"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"logname":{"doc":"","t":[5],"n":["main"],"q":["logname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"ls":{"doc":"","t":[5],"n":["main"],"q":["ls"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mkdir":{"doc":"","t":[5],"n":["main"],"q":["mkdir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mkfifo":{"doc":"","t":[5],"n":["main"],"q":["mkfifo"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mknod":{"doc":"","t":[5],"n":["main"],"q":["mknod"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mktemp":{"doc":"","t":[5],"n":["main"],"q":["mktemp"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"more":{"doc":"","t":[5],"n":["main"],"q":["more"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mv":{"doc":"","t":[5],"n":["main"],"q":["mv"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nice":{"doc":"","t":[5],"n":["main"],"q":["nice"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nl":{"doc":"","t":[5],"n":["main"],"q":["nl"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nohup":{"doc":"","t":[5],"n":["main"],"q":["nohup"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nproc":{"doc":"","t":[5],"n":["main"],"q":["nproc"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"numfmt":{"doc":"","t":[5],"n":["main"],"q":["numfmt"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"od":{"doc":"","t":[5],"n":["main"],"q":["od"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"paste":{"doc":"","t":[5],"n":["main"],"q":["paste"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pathchk":{"doc":"","t":[5],"n":["main"],"q":["pathchk"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pinky":{"doc":"","t":[5],"n":["main"],"q":["pinky"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pr":{"doc":"","t":[5],"n":["main"],"q":["pr"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"printenv":{"doc":"","t":[5],"n":["main"],"q":["printenv"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"printf":{"doc":"","t":[5],"n":["main"],"q":["printf"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"ptx":{"doc":"","t":[5],"n":["main"],"q":["ptx"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pwd":{"doc":"","t":[5],"n":["main"],"q":["pwd"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"readlink":{"doc":"","t":[5],"n":["main"],"q":["readlink"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"realpath":{"doc":"","t":[5],"n":["main"],"q":["realpath"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"relpath":{"doc":"","t":[5],"n":["main"],"q":["relpath"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"rm":{"doc":"","t":[5],"n":["main"],"q":["rm"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"rmdir":{"doc":"","t":[5],"n":["main"],"q":["rmdir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"runcon":{"doc":"","t":[5],"n":["main"],"q":["runcon"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"seq":{"doc":"","t":[5],"n":["main"],"q":["seq"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"shred":{"doc":"","t":[5],"n":["main"],"q":["shred"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"shuf":{"doc":"","t":[5],"n":["main"],"q":["shuf"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sleep":{"doc":"","t":[5],"n":["main"],"q":["sleep"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sort":{"doc":"","t":[5],"n":["main"],"q":["sort"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"split":{"doc":"","t":[5],"n":["main"],"q":["split"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"stat":{"doc":"","t":[5],"n":["main"],"q":["stat"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"stdbuf":{"doc":"","t":[5],"n":["main"],"q":["stdbuf"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"stty":{"doc":"","t":[5],"n":["main"],"q":["stty"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sum":{"doc":"","t":[5],"n":["main"],"q":["sum"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sync":{"doc":"","t":[5],"n":["main"],"q":["sync"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tac":{"doc":"","t":[5],"n":["main"],"q":["tac"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tail":{"doc":"","t":[5],"n":["main"],"q":["tail"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tee":{"doc":"","t":[5],"n":["main"],"q":["tee"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"test":{"doc":"","t":[5],"n":["main"],"q":["test"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"timeout":{"doc":"","t":[5],"n":["main"],"q":["timeout"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"touch":{"doc":"","t":[5],"n":["main"],"q":["touch"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tr":{"doc":"","t":[5],"n":["main"],"q":["tr"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"true":{"doc":"","t":[5],"n":["main"],"q":["true"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"truncate":{"doc":"","t":[5],"n":["main"],"q":["truncate"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tsort":{"doc":"","t":[5],"n":["main"],"q":["tsort"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tty":{"doc":"","t":[5],"n":["main"],"q":["tty"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uname":{"doc":"","t":[5],"n":["main"],"q":["uname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"unexpand":{"doc":"","t":[5],"n":["main"],"q":["unexpand"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uniq":{"doc":"","t":[5],"n":["main"],"q":["uniq"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"unlink":{"doc":"","t":[5],"n":["main"],"q":["unlink"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uptime":{"doc":"","t":[5],"n":["main"],"q":["uptime"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"users":{"doc":"","t":[5],"n":["main"],"q":["users"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uu_arch":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_arch",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_base32":{"doc":"","t":[0,5,5,7,3,5,11,11,12,11,11,5,5,12,11,0,5,12,11,11,11,12,7,7,7,7],"n":["base_common","uu_app","uumain","BASE_CMD_PARSE_ERROR","Config","base_app","borrow","borrow_mut","decode","from","from","get_input","handle_input","ignore_garbage","into","options","parse_base_cmd_args","to_read","try_from","try_into","type_id","wrap_cols","DECODE","FILE","IGNORE_GARBAGE","WRAP"],"q":["uu_base32","","","uu_base32::base_common","","","","","","","","","","","","","","","","","","","uu_base32::base_common::options","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,6,6,6,6,6,0,0,6,6,0,0,6,6,6,6,6,0,0,0,0],"f":[0,[[],1],[2,3],0,0,[[4,4],1],[[]],[[]],0,[[]],[5,[[7,[6]]]],[[6,8],[[7,[[10,[9]]]]]],[[11,[13,[12]],14,14],7],0,[[]],0,[[2,4,4],[[7,[6]]]],0,[[],15],[[],15],[[],16],0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"],[15,"str"],[3,"ArgMatches"],[3,"Config"],[6,"UResult"],[3,"Stdin"],[8,"Read"],[3,"Box"],[4,"Format"],[15,"usize"],[4,"Option"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"uu_base64":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_base64",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_basename":{"doc":"","t":[0,5,5,7,7,7,7],"n":["options","uu_app","uumain","MULTIPLE","NAME","SUFFIX","ZERO"],"q":["uu_basename","","","uu_basename::options","","",""],"d":["","","","","","",""],"i":[0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_basenc":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_basenc",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_cat":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_cat",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_chcon":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,7,0,0,0,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","HELP","RANGE","RECURSIVE","REFERENCE","ROLE","TYPE","USER","VERBOSE","dereference","preserve_root","sym_links","DEREFERENCE","NO_DEREFERENCE","NO_PRESERVE_ROOT","PRESERVE_ROOT","FOLLOW_ARG_DIR_SYM_LINK","FOLLOW_DIR_SYM_LINKS","NO_FOLLOW_SYM_LINKS"],"q":["uu_chcon","","","uu_chcon::options","","","","","","","","","","","uu_chcon::options::dereference","","uu_chcon::options::preserve_root","","uu_chcon::options::sym_links","",""],"d":["","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_chgrp":{"doc":"","t":[0,5,5,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,5,5,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,5,12,12,12,12,5],"n":["entries","uu_app","uumain","Group","Locate","Passwd","belongs_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","into","into","locate","locate","locate","locate","locate","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid"],"q":["uu_chgrp","","","uu_chgrp::entries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Get password/group file entry","","","","Fetch desired entry.","","This is a wrapper function for <code>libc::getgrouplist</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","AKA passwd.pw_name","AKA group.gr_name","","","","","","","","","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell",""],"i":[0,0,0,0,0,0,4,4,8,4,8,4,8,4,8,4,8,4,8,0,0,4,8,0,0,4,8,17,4,4,8,8,4,8,4,8,4,8,4,8,4,8,4,0,4,4,4,4,0],"f":[0,[[],1],[2,3],0,0,0,[4,[[7,[5,6]]]],[[]],[[]],[[]],[[]],[4,4],[8,8],[[]],[[]],[[4,9],[[11,[10]]]],[[8,9],[[11,[10]]]],[[]],[[]],[[],[[11,[[7,[5,6]],12]]]],[[[13,[5]]],[[11,[[7,[5,6]],12]]]],0,0,[5,[[11,[14,12]]]],[15,[[11,[5,12]]]],[[]],[[]],[[],[[11,[12]]]],[5,[[11,[4,12]]]],[15,[[11,[4,12]]]],[5,[[11,[8,12]]]],[15,[[11,[8,12]]]],0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],16],[[],16],0,[5,[[11,[14,12]]]],0,0,0,0,[15,[[11,[5,12]]]]],"p":[[3,"Command"],[8,"Args"],[15,"i32"],[3,"Passwd"],[15,"u32"],[3,"Global"],[3,"Vec"],[3,"Group"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Error"],[4,"Option"],[3,"String"],[15,"str"],[3,"TypeId"],[8,"Locate"]]},\
"uu_chmod":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_chmod",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_chown":{"doc":"","t":[3,8,3,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,12,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,5,5,3,8,3,5,5,12,12,5,5,10,12,12,12,5,12,12,12,12,5],"n":["Group","Locate","Passwd","belongs_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","entries","fmt","fmt","from","from","gid","gid","into","into","locate","locate","locate","locate","locate","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid","user_dir","user_info","user_passwd","user_shell","uu_app","uumain","Group","Locate","Passwd","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","locate","name","name","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid"],"q":["uu_chown","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_chown::entries","","","","","","","","","","","","","","","","","",""],"d":["","Fetch desired entry.","","This is a wrapper function for <code>libc::getgrouplist</code>.","","","","","","","","","Get password/group file entry","","","Returns the argument unchanged.","Returns the argument unchanged.","AKA passwd.pw_gid","AKA group.gr_gid","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","AKA passwd.pw_name","AKA group.gr_name","","","","","","","","","AKA passwd.pw_uid","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell","","","","Fetch desired entry.","","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","","AKA passwd.pw_name","AKA group.gr_name","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell",""],"i":[0,0,0,1,1,5,1,5,1,5,1,5,0,1,5,1,5,1,5,1,5,17,1,1,5,5,1,5,1,5,1,5,1,5,1,5,1,1,1,1,1,0,0,0,0,0,0,0,1,5,0,0,17,1,5,1,0,1,1,1,1,0],"f":[0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[1,1],[5,5],[[]],[[]],0,[[1,6],[[8,[7]]]],[[5,6],[[8,[7]]]],[[]],[[]],0,0,[[]],[[]],[[],[[8,[9]]]],[10,[[8,[1,9]]]],[2,[[8,[1,9]]]],[10,[[8,[5,9]]]],[2,[[8,[5,9]]]],0,0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],0,0,0,0,0,[[],12],[13,14],0,0,0,[[],[[8,[[4,[2,3]],9]]]],[[[15,[2]]],[[8,[[4,[2,3]],9]]]],0,0,[2,[[8,[16,9]]]],[10,[[8,[2,9]]]],[[],[[8,[9]]]],0,0,0,[2,[[8,[16,9]]]],0,0,0,0,[10,[[8,[2,9]]]]],"p":[[3,"Passwd"],[15,"u32"],[3,"Global"],[3,"Vec"],[3,"Group"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Error"],[15,"str"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[4,"Option"],[3,"String"],[8,"Locate"]]},\
"uu_chroot":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_chroot",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_cksum":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_cksum",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_comm":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_comm",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_cp":{"doc":"","t":[13,13,13,3,13,13,13,13,4,13,4,6,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,4,4,13,13,6,6,4,13,13,13,6,6,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12],"n":["Always","Always","AttrOnly","Attributes","Auto","Auto","Backup","Clobber","ClobberMode","Copy","CopyMode","CopyResult","Directory","Error","Error","File","Force","Interactive","InvalidArgument","IoErr","IoErrContext","Link","Never","Never","No","NoClobber","NotADirectory","NotAllFilesCopied","NotImplemented","Options","OverwriteMode","Preserve","ReflinkMode","RemoveDestination","Skipped","Source","SourceSlice","SparseMode","Standard","StripPrefixError","SymLink","Target","TargetSlice","TargetType","Update","WalkDirErr","Yes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","localize_to_target","provide","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uu_app","uumain","verify_target_type","required"],"q":["uu_cp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_cp::Preserve"],"d":["","","","","","","Invalid arguments to backup","Default Always overwrite existing files","Specifies whether when overwrite files","","","","","","General copy error","","","Prompt before overwriting a file","Result of a skipped file","Simple io::Error wrapper","Wrapper for io::Error with path context","","","","","Never overwrite a file","","Represents the state when a non-fatal error has occurred …","All standard options are included as an an implementation …","Re-usable, extensible copy options","Specifies whether when overwrite files","","Possible arguments for <code>--reflink</code>.","","Result of a skipped file","","","Possible arguments for <code>--sparse</code>.","","Simple std::path::StripPrefixError wrapper","","","","Specifies the expected file type of copy target","","Simple walkdir::Error wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Remove the <code>root</code> prefix from <code>source</code> and prefix it with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate an error message if <code>target</code> is not the correct …",""],"i":[3,4,29,0,3,4,5,2,0,29,0,0,28,0,5,28,1,2,5,5,5,29,3,4,8,2,5,5,5,0,0,0,0,1,5,0,0,0,1,5,29,0,0,0,29,5,8,28,29,30,5,1,2,3,4,11,8,28,29,30,5,1,2,3,4,11,8,1,2,3,4,1,2,3,4,5,1,2,3,4,8,5,5,11,8,28,29,30,5,5,5,5,5,5,5,5,1,2,3,4,11,8,28,29,30,5,1,2,3,4,11,8,0,5,5,1,2,3,4,5,28,29,30,5,1,2,3,4,11,8,28,29,30,5,1,2,3,4,11,8,28,29,30,5,1,2,3,4,11,8,0,0,0,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[5,6],[[1,1],7],[[2,2],7],[[3,3],7],[[4,4],7],[[8,8],7],[[5,9],10],[[5,9],10],[[11,9],10],[[8,9],10],[[]],[[]],[[]],[[[14,[12,13]]],5],[13,5],[15,5],[16,5],[12,5],[[]],[[[14,[16,13]]],5],[17,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,18,18],[[20,[19]]]],[21],[5,[[23,[22]]]],[[]],[[]],[[]],[[]],[[],16],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[27,6],[[18,28],20],0],"p":[[4,"ClobberMode"],[4,"OverwriteMode"],[4,"ReflinkMode"],[4,"SparseMode"],[4,"Error"],[15,"i32"],[15,"bool"],[4,"Preserve"],[3,"Formatter"],[6,"Result"],[3,"Attributes"],[15,"str"],[3,"Error"],[3,"Context"],[3,"Error"],[3,"String"],[3,"StripPrefixError"],[3,"Path"],[3,"PathBuf"],[6,"CopyResult"],[3,"Demand"],[8,"Error"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[4,"TargetType"],[4,"CopyMode"],[3,"Options"],[13,"Yes"]]},\
"uu_csplit":{"doc":"","t":[3,11,11,5,11,11,11,11,11,5,5],"n":["CsplitOptions","borrow","borrow_mut","csplit","from","into","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_csplit","","","","","","","","","",""],"d":["Command line options for csplit.","","","Splits a file into severals according to the command line …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,1,1,0,1,1,1,1,1,0,0],"f":[0,[[]],[[]],[[1,[2,[0]]],[[3,[0]]]],[[]],[[]],[[],3],[[],3],[[],4],[[],5],[6,7]],"p":[[3,"CsplitOptions"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_cut":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_cut",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_date":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_date",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_dd":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_dd",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_df":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_df",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_dir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_dir",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_dircolors":{"doc":"","t":[13,13,4,13,8,13,11,11,11,11,10,11,5,11,10,10,11,11,11,5,5],"n":["CShell","Display","OutputFmt","Shell","StrUtils","Unknown","borrow","borrow_mut","eq","fmt","fnmatch","from","guess_syntax","into","purify","split_two","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_dircolors","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Remove comments and trim whitespace","Like split_whitespace() but only produce 2 components","","","","",""],"i":[1,1,0,1,0,1,1,1,1,1,11,1,0,1,11,11,1,1,1,0,0],"f":[0,0,0,0,0,0,[[]],[[]],[[1,1],2],[[1,3],4],[5,2],[[]],[[],1],[[]],[[]],[[]],[[],6],[[],6],[[],7],[[],8],[9,10]],"p":[[4,"OutputFmt"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[8,"StrUtils"]]},\
"uu_dirname":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_dirname",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_du":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_du",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_echo":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_echo",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_env":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_env",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_expand":{"doc":"","t":[0,5,5,7,7,7,7],"n":["options","uu_app","uumain","FILES","INITIAL","NO_UTF8","TABS"],"q":["uu_expand","","","uu_expand::options","","",""],"d":["","","","","","",""],"i":[0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_expr":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_expr",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_factor":{"doc":"","t":[3,11,11,11,11,11,11,5,11,11,11,11,0,11,11,0,11,11,11,11,11,5,5,11,5,17,17,17,5,5],"n":["Factors","add","borrow","borrow_mut","clone","clone_into","eq","factor","fmt","fmt","from","into","numeric","one","push","table","to_owned","to_string","try_from","try_into","type_id","uu_app","uumain","vzip","gcd","CHUNK_SIZE","NEXT_PRIME","PRIME_INVERSIONS_U64","factor","factor_chunk"],"q":["uu_factor","","","","","","","","","","","","","","","","","","","","","","","","uu_factor::numeric","uu_factor::table","","","",""],"d":["","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0],"f":[0,[[1,2,3]],[[]],[[]],[1,1],[[]],[[1,1],4],[2,1],[[1,5],6],[[1,5],6],[[]],[[]],0,[[],1],[[1,2]],0,[[]],[[],7],[[],8],[[],8],[[],9],[[],10],[11,12],[[]],[[2,2],2],0,0,0,[[2,1]],[[]]],"p":[[3,"Factors"],[15,"u64"],[15,"u8"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_false":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_false",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_fmt":{"doc":"","t":[6,3,11,11,11,11,11,11,11,5,5],"n":["FileOrStdReader","FmtOptions","borrow","borrow_mut","from","into","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_fmt","","","","","","","","","",""],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,6,6,6,6,6,6,6,0,0],"f":[0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2],[[],3],[4,5]],"p":[[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[3,"FmtOptions"]]},\
"uu_fold":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_fold",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_groups":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_groups",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_hashsum":{"doc":"","t":[5,5,5,5,5],"n":["uu_app_b3sum","uu_app_bits","uu_app_common","uu_app_custom","uumain"],"q":["uu_hashsum","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[[[],1],[[],1],[[],1],[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_head":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_head",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_hostid":{"doc":"","t":[5,5,5],"n":["gethostid","uu_app","uumain"],"q":["uu_hostid","",""],"d":["","",""],"i":[0,0,0],"f":[0,[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_hostname":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_hostname",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_id":{"doc":"","t":[2,5,5],"n":["libc","uu_app","uumain"],"q":["uu_id","",""],"d":["","",""],"i":[0,0,0],"f":[0,[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_install":{"doc":"","t":[3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Behavior","Directory","MainFunction","Standard","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","from","from","into","into","mode","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_install","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Create directories","","Install files to locations (primary functionality)","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determine the mode for chmod after copy.","","","","","","","","",""],"i":[0,1,0,1,3,1,3,1,1,1,1,3,1,3,1,3,1,3,1,3,1,3,1,0,0],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[]],[[]],[[]],[[]],[3,4],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],7],[8,9]],"p":[[4,"MainFunction"],[15,"bool"],[3,"Behavior"],[15,"u32"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_join":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_join",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_kill":{"doc":"","t":[13,13,4,13,11,11,11,11,11,11,0,11,11,11,11,5,5,7,7,7,7],"n":["Kill","List","Mode","Table","borrow","borrow_mut","clone","clone_into","from","into","options","to_owned","try_from","try_into","type_id","uu_app","uumain","LIST","PIDS_OR_SIGNALS","SIGNAL","TABLE"],"q":["uu_kill","","","","","","","","","","","","","","","","","uu_kill::options","","",""],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],[[]],[[]],0,[[]],[[],2],[[],2],[[],3],[[],4],[5,6],0,0,0,0],"p":[[4,"Mode"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_link":{"doc":"","t":[0,5,5,7],"n":["options","uu_app","uumain","FILES"],"q":["uu_link","","","uu_link::options"],"d":["","","",""],"i":[0,0,0,0],"f":[0,[[],1],[2,3],0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_ln":{"doc":"","t":[13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Force","Interactive","NoClobber","OverwriteMode","Settings","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_ln","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[1,1,1,0,0,10,1,10,1,1,1,1,1,10,1,10,1,1,10,1,10,1,10,1,0,0],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[1,3],4],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],7],[8,9]],"p":[[4,"OverwriteMode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[3,"Settings"]]},\
"uu_logname":{"doc":"","t":[5,5,5],"n":["getlogin","uu_app","uumain"],"q":["uu_logname","",""],"d":["","",""],"i":[0,0,0],"f":[0,[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_ls":{"doc":"","t":[13,13,13,3,4,13,13,11,11,11,11,11,11,12,11,11,11,11,11,5,0,12,11,11,11,11,11,11,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"n":["Across","Columns","Commas","Config","Format","Long","OneLine","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","format","from","from","from","into","into","list","options","quoting_style","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain","AUTHOR","COLOR","CONTEXT","DIRECTORY","DIRED","FORMAT","FULL_TIME","GROUP_DIRECTORIES_FIRST","HELP","HIDE","HIDE_CONTROL_CHARS","IGNORE","IGNORE_BACKUPS","INDICATOR_STYLE","INODE","NO_GROUP","PATHS","QUOTING_STYLE","RECURSIVE","REVERSE","SHOW_CONTROL_CHARS","SORT","TIME","TIME_STYLE","WIDTH","ZERO","dereference","files","format","indicator_style","quoting","size","sort","time","ALL","ARGS","DIR_ARGS","ALL","ALMOST_ALL","ACROSS","COLUMNS","COMMAS","LONG","LONG_NO_GROUP","LONG_NO_OWNER","LONG_NUMERIC_UID_GID","ONE_LINE","TAB_SIZE","CLASSIFY","FILE_TYPE","SLASH","C","ESCAPE","LITERAL","ALLOCATION_SIZE","BLOCK_SIZE","HUMAN_READABLE","KIBIBYTES","SI","EXTENSION","NONE","SIZE","TIME","VERSION","ACCESS","CHANGE"],"q":["uu_ls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_ls::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_ls::options::dereference","","","uu_ls::options::files","","uu_ls::options::format","","","","","","","","","uu_ls::options::indicator_style","","","uu_ls::options::quoting","","","uu_ls::options::size","","","","","uu_ls::options::sort","","","","","uu_ls::options::time",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,1,1,6,1,6,1,1,1,6,6,6,1,6,1,0,0,6,6,1,6,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,1],2],[[1,3],4],0,[[]],[5,[[7,[6]]]],[[]],[[]],[[]],[[[9,[8]],6],7],0,0,[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[13,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"Format"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Config"],[6,"UResult"],[3,"Path"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_mkdir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_mkdir",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_mkfifo":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_mkfifo",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_mknod":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_mknod",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_mktemp":{"doc":"","t":[5,5,5],"n":["dry_exec","uu_app","uumain"],"q":["uu_mktemp","",""],"d":["","",""],"i":[0,0,0],"f":[[[1,1,2,1],3],[[],4],[5,6]],"p":[[15,"str"],[15,"usize"],[6,"UResult"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_more":{"doc":"","t":[0,5,5,17,17,17,17,17,17,17,17,17,17,17,17],"n":["options","uu_app","uumain","CLEAN_PRINT","FILES","FROM_LINE","LINES","LOGICAL","NO_PAUSE","NUMBER","PATTERN","PLAIN","PRINT_OVER","SILENT","SQUEEZE"],"q":["uu_more","","","uu_more::options","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_mv":{"doc":"","t":[3,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Behavior","Force","Interactive","NoClobber","OverwriteMode","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_mv","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,1,1,1,0,8,1,8,1,1,1,1,8,1,8,1,1,8,1,8,1,8,1,0,0],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],5],[6,7]],"p":[[4,"OverwriteMode"],[15,"bool"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[3,"Behavior"]]},\
"uu_nice":{"doc":"","t":[0,5,5,7,7],"n":["options","uu_app","uumain","ADJUSTMENT","COMMAND"],"q":["uu_nice","","","uu_nice::options",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,[[],1],[2,3],0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_nl":{"doc":"","t":[3,11,11,11,11,0,11,11,11,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["Settings","borrow","borrow_mut","from","into","options","try_from","try_into","type_id","uu_app","uumain","BODY_NUMBERING","FILE","FOOTER_NUMBERING","HEADER_NUMBERING","HELP","JOIN_BLANK_LINES","LINE_INCREMENT","NO_RENUMBER","NUMBER_FORMAT","NUMBER_SEPARATOR","NUMBER_WIDTH","SECTION_DELIMITER","STARTING_LINE_NUMBER"],"q":["uu_nl","","","","","","","","","","","uu_nl::options","","","","","","","","","","","",""],"d":["","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,6,6,6,6,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],2],[[],3],[4,5],0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[3,"Settings"]]},\
"uu_nohup":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_nohup",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_nproc":{"doc":"","t":[17,5,5],"n":["_SC_NPROCESSORS_CONF","uu_app","uumain"],"q":["uu_nproc","",""],"d":["","",""],"i":[0,0,0],"f":[0,[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_numfmt":{"doc":"","t":[0,0,0,5,5,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,5,11,11,11,11,11,12,11,11,11,17,13,17,17,17,17,17,17,17,3,13,17,17,17,13,3,17,17,4,17,17,17,17,17,13,3,13,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,12,11,12,12,12,11,11,11,11,12,12,12,12,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["errors","format","options","uu_app","uumain","FormattingError","IllegalArgument","IoError","NumfmtError","borrow","borrow_mut","code","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","WhitespaceSplitter","borrow","borrow_mut","div_round","format_and_print","from","into","into_iter","multiunzip","next","s","try_from","try_into","type_id","DELIMITER","Down","FIELD","FIELD_DEFAULT","FORMAT","FROM","FROM_DEFAULT","FROM_UNIT","FROM_UNIT_DEFAULT","FormatOptions","FromZero","HEADER","HEADER_DEFAULT","NUMBER","Nearest","NumfmtOptions","PADDING","ROUND","RoundMethod","SUFFIX","TO","TO_DEFAULT","TO_UNIT","TO_UNIT_DEFAULT","TowardsZero","TransformOptions","Up","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","delimiter","eq","fields","fmt","format","from","from","from","from","from","from_str","from_unit","grouping","header","into","into","into","into","padding","padding","precision","prefix","round","round","suffix","suffix","to","to_owned","to_unit","transform","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zero_padding"],"q":["uu_numfmt","","","","","uu_numfmt::errors","","","","","","","","","","","","","","","","uu_numfmt::format","","","","","","","","","","","","","","uu_numfmt::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Iterate over a line’s fields, where each field is a …","","","Divide numerator by denominator, with rounding.","Format a line of text according to the selected options.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Yield the next field in the input string as a tuple …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,0,15,15,0,0,15,15,15,15,15,15,15,15,15,0,12,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,19,14,12,17,19,14,12,17,12,12,17,14,17,14,17,14,19,14,12,17,19,17,19,17,14,19,14,12,17,14,17,17,17,12,14,14,17,19,12,19,14,19,14,12,17,19,14,12,17,19,14,12,17,17],"f":[0,0,0,[[],1],[2,3],0,0,0,0,[[]],[[]],[4,3],[[4,5],6],[[4,5],6],[[]],[[]],[7],[[],8],[[],9],[[],9],[[],10],0,[[]],[[]],[[11,11,12],11],[[13,14],[[9,[8]]]],[[]],[[]],[[]],[[]],[15,16],0,[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[[]],[[],17],0,[[17,17],18],0,[[17,5],6],0,[[]],[[]],[[]],[[]],0,[13,[[9,[17]]]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[12,11],11],0,0,0,0,[[]],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0],"p":[[3,"Command"],[8,"Args"],[15,"i32"],[4,"NumfmtError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"f64"],[4,"RoundMethod"],[15,"str"],[3,"NumfmtOptions"],[3,"WhitespaceSplitter"],[4,"Option"],[3,"FormatOptions"],[15,"bool"],[3,"TransformOptions"]]},\
"uu_od":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_od",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_paste":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_paste",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_pathchk":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_pathchk",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_pinky":{"doc":"","t":[8,10,5,5],"n":["Capitalize","capitalize","uu_app","uumain"],"q":["uu_pinky","","",""],"d":["","","",""],"i":[0,5,0,0],"f":[0,[[],1],[[],2],[3,4]],"p":[[3,"String"],[3,"Command"],[8,"Args"],[15,"i32"],[8,"Capitalize"]]},\
"uu_pr":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_pr",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_printenv":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_printenv",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_printf":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_printf",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_ptx":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_ptx",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_pwd":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_pwd",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_readlink":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_readlink",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_realpath":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_realpath",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_relpath":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_relpath",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_rm":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_rm",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_rmdir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_rmdir",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_runcon":{"doc":"","t":[0,5,5,17,17,17,17,17],"n":["options","uu_app","uumain","COMPUTE","RANGE","ROLE","TYPE","USER"],"q":["uu_runcon","","","uu_runcon::options","","","",""],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_seq":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_seq",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_shred":{"doc":"","t":[0,5,5,17,17,17,17,17,17,17,17],"n":["options","uu_app","uumain","EXACT","FILE","FORCE","ITERATIONS","REMOVE","SIZE","VERBOSE","ZERO"],"q":["uu_shred","","","uu_shred::options","","","","","","",""],"d":["","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_shuf":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_shuf",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_sleep":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_sleep",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_sort":{"doc":"","t":[4,3,13,13,3,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11],"n":["GeneralF64ParseResult","GlobalSettings","Infinity","Invalid","Line","NaN","NegInfinity","Number","Output","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","partial_cmp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uu_app","uumain","vzip","vzip","vzip","vzip"],"q":["uu_sort","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,3,3,0,3,3,3,0,15,1,2,3,15,1,2,3,1,2,3,1,2,3,1,15,1,2,3,15,1,2,3,15,1,2,3,3,2,3,15,1,2,3,15,1,2,3,15,1,2,3,3,1,2,3,15,1,2,3,15,1,2,3,15,1,2,3,0,0,15,1,2,3],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[],1],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[3,3],5],[[2,6],7],[[3,6],7],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[3,3],[[9,[8]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[13,14],[[]],[[]],[[]],[[]]],"p":[[3,"GlobalSettings"],[3,"Line"],[4,"GeneralF64ParseResult"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"],[3,"Output"]]},\
"uu_split":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_split",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_stat":{"doc":"","t":[13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,5,5],"n":["Integer","OutputType","Str","Unknown","Unsigned","UnsignedHex","UnsignedOct","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_stat","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],"f":[0,0,0,0,0,0,0,[[]],[[]],[[1,2],3],[[]],[[]],[[],4],[[],4],[[],5],[[],6],[7,8]],"p":[[4,"OutputType"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_stdbuf":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_stdbuf",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_stty":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,5,5],"n":["Flag","TermSize","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","fmt","from","from","hidden","into","into","new","new_grouped","sane","tiocgwinsz","tiocswinsz","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_stty","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Get terminal window size","Set terminal window size","","","","","","","","",""],"i":[0,0,2,3,2,3,2,2,3,2,3,2,3,2,2,3,2,2,2,0,0,2,2,3,2,3,2,3,0,0],"f":[0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[[],3],[[[2,[4]],5],6],[[3,5],6],[[]],[[]],[2,2],[[]],[[]],[7,2],[7,2],[2,2],[[8,3],[[9,[8]]]],[[8,3],[[9,[8]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[13,14]],"p":[[8,"Clone"],[3,"Flag"],[3,"TermSize"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"str"],[6,"c_int"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_sum":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_sum",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_sync":{"doc":"","t":[0,5,5,7,7],"n":["options","uu_app","uumain","DATA","FILE_SYSTEM"],"q":["uu_sync","","","uu_sync::options",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,[[],1],[2,3],0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_tac":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tac",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_tail":{"doc":"","t":[0,0,0,2,5,13,13,13,4,4,13,13,13,13,13,13,13,13,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,0,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,17,17,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7],"n":["args","chunks","text","uu_app","uumain","Bytes","CannotFollowStdinByName","Descriptor","FilterMode","FollowMode","Lines","MinusZero","Name","Negative","NoOutput","Ok","PlusZero","Positive","Settings","Signum","VerificationResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_warnings","clone","clone","clone_into","clone_into","default","default","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","follow","from","from","from","from","from","from","from_obsolete_args","has_only_stdin","has_stdin","inputs","into","into","into","into","into","max_unchanged_stats","mode","num_inputs","options","parse_args","parse_obsolete","pid","presume_input_pipe","retry","sleep_sec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_polling","uu_app","verbose","verify","ARG_FILES","BYTES","DISABLE_INOTIFY_TERM","FOLLOW","FOLLOW_RETRY","LINES","MAX_UNCHANGED_STATS","PID","PRESUME_INPUT_PIPE","RETRY","SLEEP_INT","USE_POLLING","ZERO_TERM","verbosity","QUIET","VERBOSE","BLOCK_SIZE","BUFFER_SIZE","BytesChunk","BytesChunkBuffer","LinesChunk","LinesChunkBuffer","ReverseChunks","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fill","fill","fill","fill","fmt","fmt","from","from","from","from","from","get_buffer","get_buffer","get_buffer_with","get_buffer_with","get_lines","has_data","has_data","has_data","into","into","into","into","into","into_iter","new","new","new","new","new","next","print","print","print_bytes","print_lines","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BACKEND","BAD_FD","BECOME_INACCESSIBLE","DASH","DEV_PTMX","DEV_STDIN","DEV_TTY","FD0","IS_A_DIRECTORY","NO_FILES_REMAINING","NO_SUCH_FILE","STDIN_HEADER"],"q":["uu_tail","","","","","uu_tail::args","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_tail::args::options","","","","","","","","","","","","","","uu_tail::args::options::verbosity","","uu_tail::chunks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_tail::text","","","","","","","","","","",""],"d":["","Iterating over a file by chunks, either starting at the …","","","","","","","","","Mode for lines delimited by delimiter as u8","","","","","","","","","","","","","","","","","","","","","Check <code>Settings</code> for problematic configurations of tail …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify <code>Settings</code> and try to find unsolvable …","","","","","","","","","","","","","","","","","When reading files in reverse in <code>bounded_tail</code>, this is the …","The size of the backing buffer of a LinesChunk or …","A <code>BytesChunk</code> storing a fixed size number of bytes in a …","An abstraction layer on top of <code>BytesChunk</code> mainly to …","Works similar to a <code>BytesChunk</code> but also stores the number …","An abstraction layer on top of <code>LinesChunk</code> mainly to …","An iterator over a file in non-overlapping chunks from the …","","","","","","","","","","","","","","Fills this buffer with chunks and consumes the reader …","Fills this buffer with chunks and consumes the reader …","Fills <code>self.buffer</code> with maximal <code>BUFFER_SIZE</code> number of …","Fills <code>self.buffer</code> with maximal <code>BUFFER_SIZE</code> number of …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Receive the internal buffer safely, so it returns a slice …","Returns this buffer safely. See <code>BytesChunk::get_buffer</code>","Like <code>BytesChunk::get_buffer</code>, but returning a slice from …","Returns this buffer safely with an offset applied. See …","Return the number of lines the buffer contains. <code>self.lines</code> …","","","Returns true if this buffer has stored any bytes.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>BytesChunkBuffer</code>.","Create a new <code>LinesChunkBuffer</code>","","","","","","Print the bytes contained in this buffer beginning from …","Print the bytes contained in this buffer calculated with …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,6,10,5,0,0,6,4,5,4,10,10,4,4,0,0,0,4,6,5,10,3,4,6,5,10,3,3,4,5,4,5,6,3,4,6,5,4,6,5,10,3,3,4,6,5,10,3,3,3,3,3,3,4,6,5,10,3,3,3,3,0,0,0,3,3,3,3,4,5,4,6,5,10,3,4,6,5,10,3,4,6,5,10,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,21,19,22,24,20,21,19,22,19,19,19,20,21,19,22,19,22,24,20,21,19,22,19,22,19,22,22,20,19,22,24,20,21,19,22,24,24,20,21,19,22,24,20,21,22,22,19,24,20,21,19,22,24,20,21,19,22,24,20,21,19,22,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,[1,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],[4,4],[5,5],[[]],[[]],[[],6],[[],3],[[4,4],7],[[6,6],7],[[5,5],7],[[4,8],9],[[6,8],9],[[5,8],9],[[10,8],9],[[3,8],9],0,[[]],[[]],[[]],[[]],[11,[[12,[3]]]],[[]],0,[3,7],[3,7],0,[[]],[[]],[[]],[[]],[[]],0,0,[3,15],0,[1,[[12,[3]]]],[[13,[14,[13]]],[[12,[[14,[3]]]]]],0,0,0,0,[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[],18],0,[3,10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[[]],[[19,19],7],[20,12],[21,12],[19,[[12,[[14,[15]]]]]],[22,[[12,[[14,[15]]]]]],[[19,8],9],[[22,8],9],[[]],[[]],[[]],[[]],[[]],[19],[22],[[19,15]],[[22,15]],[22,15],[20,7],[19,7],[22,7],[[]],[[]],[[]],[[]],[[]],[[]],[23,24],[25,20],[[26,25],21],[[],19],[26,22],[24,14],[[20,27],12],[[21,27],12],[[22,15],12],[[22,15],12],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0],"p":[[8,"Args"],[15,"i32"],[3,"Settings"],[4,"Signum"],[4,"FollowMode"],[4,"FilterMode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"VerificationResult"],[3,"ArgMatches"],[6,"UResult"],[3,"OsString"],[4,"Option"],[15,"usize"],[4,"Result"],[3,"TypeId"],[3,"Command"],[3,"BytesChunk"],[3,"BytesChunkBuffer"],[3,"LinesChunkBuffer"],[3,"LinesChunk"],[3,"File"],[3,"ReverseChunks"],[15,"u64"],[15,"u8"],[8,"Write"]]},\
"uu_tee":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tee",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_test":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_test",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_timeout":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","COMMAND","DURATION","FOREGROUND","KILL_AFTER","PRESERVE_STATUS","SIGNAL","VERBOSE"],"q":["uu_timeout","","","uu_timeout::options","","","","","",""],"d":["","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_touch":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,0,7,7,7],"n":["options","uu_app","uumain","ACCESS","HELP","MODIFICATION","NO_CREATE","NO_DEREF","SOURCES","TIME","sources","CURRENT","DATE","REFERENCE"],"q":["uu_touch","","","uu_touch::options","","","","","","","","uu_touch::options::sources","",""],"d":["","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_tr":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tr",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_true":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_true",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_truncate":{"doc":"","t":[0,5,5,7,7,7,7,7],"n":["options","uu_app","uumain","ARG_FILES","IO_BLOCKS","NO_CREATE","REFERENCE","SIZE"],"q":["uu_truncate","","","uu_truncate::options","","","",""],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_tsort":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tsort",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_tty":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tty",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_uname":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","ALL","HARDWARE_PLATFORM","KERNEL_NAME","KERNEL_RELEASE","KERNEL_VERSION","MACHINE","NODENAME","OS","PROCESSOR"],"q":["uu_uname","","","uu_uname::options","","","","","","","",""],"d":["","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_unexpand":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_unexpand",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_uniq":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","ALL_REPEATED","CHECK_CHARS","COUNT","GROUP","IGNORE_CASE","REPEATED","SKIP_CHARS","SKIP_FIELDS","UNIQUE","ZERO_TERMINATED"],"q":["uu_uniq","","","uu_uniq::options","","","","","","","","",""],"d":["","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_unlink":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_unlink",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_uptime":{"doc":"","t":[2,0,5,5,7],"n":["libc","options","uu_app","uumain","SINCE"],"q":["uu_uptime","","","","uu_uptime::options"],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,0,[[],1],[2,3],0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_users":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_users",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_vdir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_vdir",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_wc":{"doc":"","t":[0,5,5,7,7,7,7,7,7],"n":["options","uu_app","uumain","BYTES","CHAR","FILES0_FROM","LINES","MAX_LINE_LENGTH","WORDS"],"q":["uu_wc","","","uu_wc::options","","","","",""],"d":["","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[0,[[],1],[2,3],0,0,0,0,0,0],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_who":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_who",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_whoami":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_whoami",""],"d":["",""],"i":[0,0],"f":[[[],1],[2,3]],"p":[[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uu_yes":{"doc":"","t":[5,5,5],"n":["exec","uu_app","uumain"],"q":["uu_yes","",""],"d":["","",""],"i":[0,0,0],"f":[[[],1],[[],2],[3,4]],"p":[[6,"Result"],[3,"Command"],[8,"Args"],[15,"i32"]]},\
"uucore":{"doc":"","t":[8,5,0,14,11,11,14,14,0,0,0,0,5,5,0,0,5,14,14,14,14,0,23,0,0,0,0,0,0,0,0,0,0,14,0,0,5,0,5,14,14,14,14,0,0,14,5,0,0,13,17,7,4,13,4,13,13,13,13,13,0,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,5,5,5,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,10,11,11,11,11,11,13,13,13,13,13,13,13,3,13,4,6,13,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,5,5,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,5,12,12,12,12,5,3,3,8,8,8,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,10,13,3,13,13,4,13,13,13,4,11,11,11,11,11,11,5,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,14,11,5,11,11,11,11,5,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,8,8,3,3,3,3,5,5,10,11,12,12,12,10,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,10,11,10,11,11,11,11,10,11,12,10,11,11,11,11,11,10,11,12,12,12,10,11,11,10,5,5,5,5,12,5,3,3,5,5,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,13,13,4,3,13,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,13,13,13,3,13,13,4,13,13,13,4,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,0,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,0,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,3,8,3,5,5,12,12,5,5,10,12,12,12,5,12,12,12,12,5,17,17,17,17,17,17,17,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,6,6,11,5,5,5,5,8,5,5,5,5,10,10,13,13,13,13,4,4,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,5,5,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,12,11,11,11,11,11,11,11,11,7,7,5,5,5,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,7,17,17,17,17,17,17,17,17,17,17,17,3,3,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5],"n":["Args","args_os","backup_control","bin","collect_ignore","collect_lossy","crash","crash_if_err","display","encoding","entries","error","execution_phrase","format_usage","fs","fsext","get_utility_is_second_arg","has","help_about","help_section","help_usage","lines","main","memo","mode","os","panic","parse_glob","parse_size","parse_time","perms","pipes","process","prompt_yes","quoting_style","ranges","read_yes","ringbuffer","set_utility_is_second_arg","show","show_error","show_if_err","show_warning","signals","sum","uio_error","util_name","utmpx","version_cmp","AmbiguousArgument","BACKUP_CONTROL_LONG_HELP","BACKUP_CONTROL_VALUES","BackupError","BackupImpossible","BackupMode","ExistingBackup","InvalidArgument","NoBackup","NumberedBackup","SimpleBackup","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","determine_backup_mode","determine_backup_suffix","eq","eq","fmt","fmt","fmt","from","from","get_backup_path","into","into","provide","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","usage","OPT_BACKUP","OPT_BACKUP_NO_ARG","OPT_SUFFIX","backup","backup_no_args","suffix","Quotable","Quoted","borrow","borrow_mut","clone","clone_into","external","fmt","fmt","force","from","from","into","maybe_quote","maybe_quote","native","native_raw","print_verbatim","println_verbatim","quote","to_owned","to_string","try_from","try_into","type_id","Base16","Base2Lsbf","Base2Msbf","Base32","Base32Hex","Base64","Base64Url","Data","Decode","DecodeError","DecodeResult","DecodeZ85","EncodeError","Format","Io","Z85","Z85InputLenNotMultipleOf4","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode","decode","encode","encode","fmt","fmt","from","from","from","from","from","from","from","ignore_garbage","into","into","into","into","line_wrap","new","provide","source","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_print","wrap_write","Group","Locate","Passwd","belongs_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","into","into","locate","locate","locate","locate","locate","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid","ClapErrorWrapper","ExitCode","FromIo","UClapError","UError","UIoError","UResult","USimpleError","UUsageError","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","code","code","code","code","code","code","code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_exit_code","into","into","into","into","into","map_err_context","message","message","new","new","new","new","provide","provide","provide","provide","provide","set_exit_code","strip_errno","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uio_error","usage","usage","usage","with_exit_code","Existing","FileInformation","Logical","Missing","MissingHandling","None","Normal","Physical","ResolveMode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone_into","clone_into","dir_strip_dot_for_creation","display_permissions","display_permissions_unix","eq","eq","eq","file_size","fmt","fmt","from","from","from","from_file","from_path","has","hash","infos_refer_to_same_file","inode","into","into","into","make_path_relative_to","normalize_path","number_of_links","paths_refer_to_same_file","resolve_relative_path","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BirthTime","FsMeta","FsUsage","MountInfo","StatFs","StatFs","StatFs","StatFs","avail_blocks","avail_blocks","bavail","bavail_top_bit_set","bfree","birth","block_size","block_size","blocks","blocksize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dev_id","dev_name","dummy","eq","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namelen","f_namelen","f_type","f_type","f_type","f_type","ffree","files","fmt","fmt","fmt","free_blocks","free_blocks","free_file_nodes","free_file_nodes","from","from","from","fs_type","fs_type","fs_type","fsid","fsid","hash","into","into","into","io_size","io_size","mount_dir","mount_option","mount_root","namelen","namelen","new","pretty_birth","pretty_filetype","pretty_fstype","pretty_time","read_fs_list","remote","statfs","statfs_fn","statfs_fn","statfs_fn","statfs_fn","to_owned","to_owned","to_owned","total_blocks","total_blocks","total_file_nodes","total_file_nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lines","borrow","borrow_mut","from","into","into_iter","lines","next","try_from","try_into","type_id","printf","sprintf","get_umask","parse_mode","parse_numeric","parse_symbolic","strip_minus_from_mode","is_wsl_1","is_wsl_2","mute_sigpipe_panic","from_str","InvalidSuffix","ParseFailure","ParseSizeError","Parser","SizeTooBig","allow_list","b_byte_count","borrow","borrow","borrow_mut","borrow_mut","capital_b_bytes","default","default_unit","description","eq","fmt","fmt","from","from","into","into","parse","parse_size","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_allow_list","with_b_byte_count","with_default_unit","from_str","All","All","Changes","ChownExecutor","First","Group","IfFrom","None","Normal","Silent","TraverseSymlinks","User","UserGroup","Verbose","Verbosity","VerbosityLevel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chown_base","clone","clone","clone_into","clone_into","dereference","dest_gid","dest_uid","entries","eq","eq","eq","exec","files","filter","fmt","fmt","from","from","from","from","from","groups_only","into","into","into","into","into","level","options","preserve_root","recursive","to_owned","to_owned","traverse_symlinks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verbosity","wrap_chown","Group","Locate","Passwd","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","locate","name","name","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid","ARG_FILES","ARG_GROUP","ARG_OWNER","FROM","HELP","RECURSIVE","REFERENCE","dereference","preserve_root","traverse","verbosity","DEREFERENCE","NO_DEREFERENCE","NO_PRESERVE","PRESERVE","EVERY","NO_TRAVERSE","TRAVERSE","CHANGES","QUIET","SILENT","VERBOSE","Error","Result","map_err_context","pipe","splice","splice_exact","vmsplice","ChildExt","getegid","geteuid","getgid","getuid","send_signal","wait_or_timeout","C","Double","Literal","None","Quotes","QuotingStyle","Shell","Single","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","escape_name","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","always_quote","escape","quotes","show_control","show_control","Range","borrow","borrow_mut","cmp","complement","contain","eq","fmt","from","from_list","from_str","high","into","low","partial_cmp","try_from","try_into","type_id","RingBuffer","borrow","borrow_mut","data","from","from_iter","into","new","push_back","try_from","try_into","type_id","ALL_SIGNALS","DEFAULT_SIGNAL","is_signal","signal_by_name_or_value","signal_name_by_value","BSD","Blake2b","Blake3","CRC","Digest","DigestWriter","Md5","SYSV","Sha1","Sha224","Sha256","Sha384","Sha3_224","Sha3_256","Sha3_384","Sha3_512","Sha512","Shake128","Shake256","Sm3","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","div_ceil","finalize","flush","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_finalize","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","hash_update","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bits","output_bytes","output_bytes","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","result_str","result_str","result_str","result_str","result_str","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","ACCOUNTING","BOOT_TIME","DEAD_PROCESS","DEFAULT_FILE","EMPTY","INIT_PROCESS","LOGIN_PROCESS","NEW_TIME","OLD_TIME","RUN_LVL","USER_PROCESS","UT_HOSTSIZE","UT_IDSIZE","UT_LINESIZE","UT_NAMESIZE","Utmpx","UtmpxIter","borrow","borrow","borrow_mut","borrow_mut","canon_host","drop","endutxent","exit_status","from","from","getutxent","host","into","into","into_inner","into_iter","is_user_process","iter_all_records","iter_all_records_from","login_time","next","pid","record_type","setutxent","terminal_suffix","try_from","try_from","try_into","try_into","tty_device","type_id","type_id","user","utmpxname","version_cmp"],"q":["uucore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::backup_control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::backup_control::arguments","","","","","","uucore::display","","","","","","","","","","","","","","","","","","","","","","","","","uucore::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::entries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::fsext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::lines","","","","","","","","","","","uucore::memo","","uucore::mode","","","","","uucore::os","","uucore::panic","uucore::parse_glob","uucore::parse_size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::parse_time","uucore::perms","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::perms::entries","","","","","","","","","","","","","","","","","","","uucore::perms::options","","","","","","","","","","","uucore::perms::options::dereference","","uucore::perms::options::preserve_root","","uucore::perms::options::traverse","","","uucore::perms::options::verbosity","","","","uucore::pipes","","","","","","","uucore::process","","","","","","","uucore::quoting_style","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::quoting_style::QuotingStyle","","","","","uucore::ranges","","","","","","","","","","","","","","","","","","uucore::ringbuffer","","","","","","","","","","","","uucore::signals","","","","","uucore::sum","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::utmpx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::version_cmp"],"d":["","","Implement GNU-style backup functionality.","","Collects the iterator into a <code>Vec&lt;String&gt;</code>, removing any …","Collects the iterator into a <code>Vec&lt;String&gt;</code>, lossily …","Display an error and <code>std::process::exit</code>","Unwrap a <code>std::result::Result</code>, crashing instead of …","","","Get password/group file entry","All utils return exit with an exit code. Usually, the …","Derive the complete execution phrase for “usage”.","Generate the usage string for clap.","Set of functions to manage files and symlinks","Set of functions to manage file systems","","","Get the about text from the help file.","Reads a section from a file of the util as a <code>str</code> literal.","Get the usage from the help file.","Iterate over lines, including the line ending character(s).","","Main entry point for our implementation of printf.","Set of functions to parse modes","","Custom panic hooks that allow silencing certain types of …","Parsing a glob Pattern from a string.","","Parsing a duration from a string.","Common functions to manage permissions","","Set of functions to manage IDs","Prompt the user with a formatted string and returns <code>true</code> …","","","Read a line from stdin and check whether the first …","A fixed-size ring buffer.","","Display a <code>crate::error::UError</code> and set global exit code.","Show an error to stderr in a similar style to GNU …","Display an error and set global exit code in error case.","Print a warning message to stderr.","","Implementations of digest functions, like md5 and sha1.","Shorthand to construct <code>UIoError</code>-instances.","Derive the utility name.","Aims to provide platform-independent methods to obtain …","","An ambiguous argument (e.g. ‘n’) was given as backup …","","","Backup error types.","Currently unused","Available backup modes.","Argument ‘existing’, ‘nil’","An invalid argument (e.g. ‘foo’) was given as backup …","Argument ‘none’, ‘off’","Argument ‘numbered’, ‘t’","Argument ‘simple’, ‘never’","Arguments for backup-related functionality.","","","","","","","","Determine the “mode” for the backup operation to …","Obtain the suffix to use for a backup.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","‘–backup’ argument","‘-b’ argument","‘-S, –suffix’ argument","An extension trait to apply quoting to strings.","A wrapper around string types for displaying with quoting …","","","","","When quoting for PowerShell, toggle whether to quote for …","","","Toggle forced quoting. If <code>true</code>, quotes are added even if …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Like <code>quote()</code>, but don’t actually add quotes unless …","Like <code>quote()</code>, but don’t actually add quotes unless …","Quote a string with the default style for the platform.","Quote an <code>OsStr</code> with the default style for the platform.","Like <code>println_verbatim</code>, without the trailing newline.","Print a path (or <code>OsStr</code>-like object) directly to stdout, …","Returns an object that implements <code>Display</code> for printing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Fetch desired entry.","","This is a wrapper function for <code>libc::getgrouplist</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","AKA passwd.pw_name","AKA group.gr_name","","","","","","","","","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell","","A wrapper for <code>clap::Error</code> that implements <code>UError</code>","A special error type that does not print any message when …","Enables the conversion from <code>std::io::Error</code> to <code>UError</code> and …","Extension trait for <code>clap::Error</code> to adjust the exit code.","Custom errors defined by the utils and <code>uucore</code>.","Wrapper type around <code>std::io::Error</code>.","Result type that should be returned by all utils.","A simple error type with an exit code and a message that …","","","","","","","","","","","","Error code of a custom error.","Error code of a custom error.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the last exit code set with <code>set_exit_code</code>. The default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Set the exit code for the program if <code>uumain</code> returns <code>Ok(())</code>.","Strip the trailing “ (os error XX)“ from io error …","","","","","","","","","","","","","","","","","","","","","Shorthand to construct <code>UIoError</code>-instances.","Print usage help to a custom error.","Print usage help to a custom error.","","","Resolve symbolic links, ignoring errors on the final …","Information to uniquely identify a file","Resolve ‘..’ elements before symlinks","Resolve symbolic links, ignoring errors on the non-final …","Controls how symbolic links should be handled when …","Do not resolve any symbolic links.","Return an error if any part of the path is missing.","Resolve symlinks as encountered when processing the path","Controls when symbolic links are resolved","","","","","","","Return the canonical, absolute form of a path.","","","","","For some programs like install or mkdir, dir/. can be …","Display the permissions of a file On non unix like system, …","Display the permissions of a file on a unix like system","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get information from a currently open file","Get information for a given path.","","","Checks if <code>p1</code> and <code>p2</code> are the same file information. If …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts absolute <code>path</code> to be relative to absolute <code>to</code> path.","Normalize a path by removing relative information For …","","Checks if <code>p1</code> and <code>p2</code> are the same file. If error happens …","resolve a relative path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Read file system list.","","","","","","","","","","","","","","","","","","","","","","","An iterator over the lines of an instance of <code>BufRead</code>.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns an iterator over the lines, including line ending …","","","","","Write a formatted string to stdout.","Create a new formatted string.","","","","","","Test if the program is running under WSL","","Terminate without error on panics that occur due to broken …","Parse a glob Pattern from a string.","","","","Parser for sizes in SI or IEC units (multiples of 1000 or …","","Whitelist for the suffix","Whether to treat “b” as a “byte count” instead of …","","","","","Whether to treat the suffix “B” as meaning “bytes”.","","Default unit when no suffix is provided","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parse a size string into a number of bytes.","Parse a size string into a number of bytes.","","","","","","","","","","","","Parse a duration from a string.","","","","","","","","","","","","","","","","The various level of verbosity","","","","","","","","","","","Base implementation for <code>chgrp</code> and <code>chown</code>.","","","","","","","","Get password/group file entry","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Perform the change of owner on a path with the various …","","Fetch desired entry.","","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","","AKA passwd.pw_name","AKA group.gr_name","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell","","","","","","","","","","","","","","","","","","","","","","","","Nix’s main error type.","Nix Result Type","","A wrapper around <code>nix::unistd::pipe</code> that ensures the pipe …","Less noisy wrapper around <code>nix::fcntl::splice</code>.","Splice wrapper which fully finishes the write.","Copy data from <code>bytes</code> into <code>target</code>, which must be a pipe.","Missing methods for Child objects","<code>getegid()</code> returns the effective group ID of the calling …","<code>geteuid()</code> returns the effective user ID of the calling …","<code>getgid()</code> returns the real group ID of the calling process.","<code>getuid()</code> returns the real user ID of the calling process.","Send a signal to a Child process.","Wait for a process to finish or return after the specified …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Test if at least one of the given Ranges contain the …","","","Returns the argument unchanged.","","Parse a string of the form <code>a-b</code> into a <code>Range</code>","","Calls <code>U::from(self)</code>.","","","","","","A fixed-size ring buffer backed by a <code>VecDeque</code>.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Append a value to the end of the ring buffer.","","","","","","","","","","","","","","A struct that writes to a digest.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterator of login records","","","","","Canonicalize host name using DNS","","","A.K.A. ut.ut_exit","Returns the argument unchanged.","Returns the argument unchanged.","","A.K.A. ut.ut_host","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Utmpx</code>, returning the underlying C struct utmpx","","","Iterate through all the utmp records.","Iterate through all the utmp records from a specific file.","A.K.A. ut.ut_tv","","A.K.A. ut.ut_pid","A.K.A. ut.ut_type","","A.K.A. ut.ut_id","","","","","A.K.A. ut.ut_line","","","A.K.A. ut.ut_user","",""],"i":[0,0,0,0,74,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,6,7,6,6,6,0,6,7,6,7,6,6,7,0,0,6,7,6,7,7,6,7,0,6,7,7,6,7,6,7,6,7,6,7,7,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,110,110,20,20,0,0,110,20,20,20,20,20,25,25,25,25,25,25,25,0,30,0,0,30,0,0,30,25,29,29,28,30,25,29,28,30,25,25,25,0,28,0,28,30,30,29,28,30,30,30,30,25,28,29,28,30,25,28,28,30,30,25,30,29,28,30,25,29,28,30,25,29,28,30,25,0,0,0,0,0,37,37,39,37,39,37,39,37,39,37,39,37,39,0,0,37,39,0,0,37,39,111,37,37,39,39,37,39,37,39,37,39,37,39,37,39,37,0,37,37,37,37,0,0,0,0,0,0,0,0,0,0,42,43,46,44,45,42,43,46,44,45,50,50,42,43,44,45,42,43,42,42,43,43,46,46,44,44,45,45,42,43,46,46,46,44,45,0,42,43,46,44,45,112,42,43,42,43,46,44,42,43,46,44,45,0,0,42,43,46,44,45,42,43,46,44,45,42,43,46,44,45,42,43,46,44,45,0,50,50,43,113,53,0,54,53,0,54,53,54,0,57,53,54,57,53,54,0,53,54,53,54,0,0,0,57,53,54,57,53,54,57,53,54,57,57,0,57,0,57,57,53,54,0,0,57,0,0,53,54,57,53,54,57,53,54,57,53,54,0,0,0,0,0,0,0,0,114,61,64,64,64,115,114,61,64,64,63,64,61,63,64,61,63,64,61,63,64,61,63,63,63,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,64,64,63,64,61,114,61,114,61,63,64,61,114,61,63,114,61,61,63,64,61,114,61,63,63,63,114,61,64,115,0,0,0,0,63,0,0,0,0,0,63,64,61,114,61,114,61,63,64,61,63,64,61,63,64,61,0,66,66,66,66,66,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,71,71,0,0,71,70,70,70,71,70,71,70,70,70,71,71,71,71,70,71,70,71,70,0,71,71,70,71,70,71,70,71,70,70,70,0,116,77,75,0,77,116,0,77,75,75,0,116,116,75,0,0,116,78,75,76,77,116,78,75,76,77,0,75,76,75,76,78,78,78,0,75,76,77,78,78,78,75,76,116,78,75,76,77,76,116,78,75,76,77,76,0,78,78,75,76,78,116,78,75,76,77,116,78,75,76,77,116,78,75,76,77,78,0,0,0,0,0,0,37,39,0,0,111,37,39,37,0,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,0,0,117,117,82,81,82,81,0,0,82,81,82,81,82,81,81,81,0,82,81,82,81,81,82,81,82,81,82,81,118,118,119,118,120,0,83,83,83,0,0,83,83,83,83,83,83,83,83,83,83,83,83,0,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,0,86,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,121,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,121,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,121,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,121,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,121,121,121,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,121,121,90,91,92,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,86,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,106,105,106,105,106,0,105,105,106,0,105,105,106,105,106,105,105,105,105,106,105,105,0,105,105,106,105,106,105,105,106,105,0,0],"f":[0,[[],1],0,0,[[],[[3,[2]]]],[[],[[3,[2]]]],0,0,0,0,0,0,[[],4],[4,2],0,0,[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],0,[[]],0,0,0,0,0,0,0,[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[6,6],[[]],[7,8],[9,[[10,[6]]]],[9,2],[[6,6],5],[[7,7],5],[[6,11],12],[[7,11],12],[[7,11],12],[[]],[[]],[[6,13,4],[[15,[14]]]],[[]],[[]],[16],[[]],[[],2],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[7,5],0,0,0,[[],19],[[],19],[[],19],0,0,[[]],[[]],[20,20],[[]],[[20,5],20],[[20,11],[[17,[21]]]],[[20,11],[[17,[21]]]],[[20,5],20],[[],20],[[]],[[]],[[],20],[[],20],[4,20],[22,20],[[[23,[22]]],24],[[[23,[22]]],24],[[],20],[[]],[[],2],[[],17],[[],17],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[[]],[25,26],[[[28,[27]]],26],[25,[[17,[2,29]]]],[[[28,[27]]],[[17,[2,29]]]],[[30,11],12],[[30,11],12],[[]],[[]],[[]],[31,30],[32,30],[33,30],[[]],[[[28,[27]],5],[[28,[27]]]],[[]],[[]],[[]],[[]],[[[28,[27]],34],[[28,[27]]]],[[27,25],[[28,[27]]]],[16],[30,[[15,[35]]]],[[]],[[],2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[28,4]],[[36,34,4],24],0,0,0,[37,[[3,[38]]]],[[]],[[]],[[]],[[]],[37,37],[39,39],[[]],[[]],[[37,11],12],[[39,11],12],[[]],[[]],[[],[[24,[[3,[38]]]]]],[[[15,[40]]],[[24,[[3,[38]]]]]],0,0,[38,[[24,[2]]]],[4,[[24,[38]]]],[[]],[[]],[[],24],[4,[[24,[37]]]],[41,[[24,[37]]]],[4,[[24,[39]]]],[38,[[24,[39]]]],0,0,[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,[41,[[24,[2]]]],0,0,0,0,[4,[[24,[41]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[42,8],[43,8],[44,8],[45,8],0,0,[[42,11],[[17,[21]]]],[[42,11],12],[[43,11],12],[[43,11],[[17,[21]]]],[[46,11],[[17,[21]]]],[[46,11],12],[[44,11],[[17,[21]]]],[[44,11],12],[[45,11],[[17,[21]]]],[[45,11],12],[[]],[[]],[31,46],[47,46],[[]],[[]],[[]],[[],8],[[]],[[]],[[]],[[]],[[]],[48],0,0,[[8,[49,[2]]],[[51,[50]]]],[[8,[49,[2]]],[[51,[50]]]],[[52,[49,[2]]],[[51,[50]]]],[8,[[51,[50]]]],[16],[16],[16],[16],[16],[8],[31,2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[],5],[[],5],[43,5],[8],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[23,[13]],53,54],[[24,[14]]]],[53,53],[54,54],[[]],[[]],[13,14],[[55,5],2],[[56,5],2],[[57,57],5],[[53,53],5],[[54,54],5],[57,58],[[53,11],12],[[54,11],12],[[]],[[]],[[]],[[],[[24,[57]]]],[[[23,[13]],5],[[24,[57]]]],0,[57],[[[24,[57]],[24,[57]]],5],[57,58],[[]],[[]],[[]],[[[23,[13]],[23,[13]]],14],[13,14],[57,58],[[[23,[13]],[23,[13]],5],5],[13,[[59,[13]]]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],0,0,0,0,0,0,[[60,61],8],[[60,61],8],[[],58],[61,58],0,0,0,[[],58],[[],62],[61,62],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[64,64],[61,61],[[]],[[]],[[]],0,0,0,[[61,61],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[63,11],12],[[64,11],12],[[61,11],[[17,[21]]]],[[],58],[61,58],[[],58],[61,58],[[]],[[]],[[]],[[],62],[61,62],0,[[],58],[61,58],[61],[[]],[[]],[[]],[[],58],[61,58],0,0,0,[[],58],[61,58],[61,64],[[],2],[[56,58],4],[62,[[59,[4]]]],[[62,62],2],[[],[[17,[[3,[63]],31]]]],0,[[],[[17,[61,2]]]],0,0,[[60,61],8],[[60,61],8],[[]],[[]],[[]],[[],58],[61,58],[[],58],[61,58],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],[65,66],[[[66,[67]]],[[15,[[24,[[3,[65]]]]]]]],[[],17],[[],17],[[],18],[4,10],[4,[[10,[2]]]],[[],40],[4,[[17,[56,2]]]],[[40,4,5],[[17,[40,2]]]],[[40,4,40,5],[[17,[40,2]]]],[3,5],[[],5],[[],5],[[]],[4,[[17,[68,69]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],70],0,[71,4],[[71,71],5],[[71,11],12],[[71,11],[[17,[21]]]],[[]],[[]],[[]],[[]],[[70,4],[[17,[58,71]]]],[4,[[17,[58,71]]]],[16],[[],2],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[70,70],[[70,5],70],[[70,4],70],[4,[[17,[72,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[73,74,4,5],10],[75,75],[76,76],[[]],[[]],0,0,0,0,[[75,75],5],[[76,76],5],[[77,77],5],[78,10],0,0,[[75,11],12],[[76,11],12],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[[23,[13]],55,[15,[40]],[15,[40]],5,76],[[17,[2,2]]]],0,0,0,[[],[[24,[[3,[38]]]]]],[[[15,[40]]],[[24,[[3,[38]]]]]],0,0,[38,[[24,[2]]]],[4,[[24,[38]]]],[[],24],0,0,0,[41,[[24,[2]]]],0,0,0,0,[4,[[24,[41]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,48],10],[[],79],[34,[[79,[34]]]],[34,79],[[],[[79,[34]]]],0,[[],38],[[],41],[[],38],[[],41],[34,24],[72,[[24,[[15,[80]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[81,81],[[]],[[22,82],2],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,0,0,0,0,0,[[]],[[]],[[83,83],84],[[],[[3,[83]]]],[34,5],[[83,83],5],[[83,11],12],[[]],[4,[[17,[[3,[83]],2]]]],[4,[[17,[83,4]]]],0,[[]],0,[[83,83],[[15,[84]]]],[[],17],[[],17],[[],18],0,[[]],[[]],0,[[]],[[1,34],85],[[]],[34,85],[85,15],[[],17],[[],17],[[],18],0,0,[34,5],[4,[[15,[34]]]],[34,[[15,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,34],34],[86,5],[86,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],[97],[98],[99],[100],[101],[102],[103],[104],[[]],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],[97],[98],[99],[100],[101],[102],[103],[104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],87],[[],88],[[],89],[[],90],[[],91],[[],92],[[],93],[[],94],[[],95],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[[],102],[[],103],[[],104],[[51,5],86],[[],34],[87,34],[88,34],[89,34],[90,34],[91,34],[92,34],[93,34],[94,34],[95,34],[96,34],[97,34],[98,34],[99,34],[100,34],[101,34],[102,34],[103,34],[104,34],[[],34],[[],34],[[]],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],[97],[98],[99],[100],[101],[102],[103],[104],[[],2],[[],2],[90,2],[91,2],[92,2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[86,[[24,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[105,[[24,[2]]]],[106],[[]],[105],[[]],[[]],[[],107],[105,2],[[]],[[]],[105,107],[[]],[105,5],[[],106],[[[23,[13]]],106],[105,108],[106,15],[105,8],[105,109],[[]],[105,2],[[],17],[[],17],[[],17],[[],17],[105,2],[[],18],[[],18],[105,2],[60,8],[[4,4],84]],"p":[[8,"Iterator"],[3,"String"],[3,"Vec"],[15,"str"],[15,"bool"],[4,"BackupMode"],[4,"BackupError"],[15,"i32"],[3,"ArgMatches"],[6,"UResult"],[3,"Formatter"],[6,"Result"],[3,"Path"],[3,"PathBuf"],[4,"Option"],[3,"Demand"],[4,"Result"],[3,"TypeId"],[3,"Arg"],[3,"Quoted"],[3,"Error"],[3,"OsStr"],[8,"AsRef"],[6,"Result"],[4,"Format"],[6,"DecodeResult"],[8,"Read"],[3,"Data"],[4,"EncodeError"],[4,"DecodeError"],[3,"Error"],[3,"DecodeError"],[4,"DecodeError"],[15,"usize"],[8,"Error"],[8,"Write"],[3,"Passwd"],[6,"gid_t"],[3,"Group"],[15,"u32"],[6,"uid_t"],[3,"USimpleError"],[3,"UUsageError"],[3,"ExitCode"],[3,"ClapErrorWrapper"],[3,"UIoError"],[6,"Error"],[8,"FnOnce"],[8,"Into"],[8,"UError"],[3,"Box"],[4,"ErrorKind"],[4,"MissingHandling"],[4,"ResolveMode"],[3,"Metadata"],[6,"mode_t"],[3,"FileInformation"],[15,"u64"],[4,"Cow"],[15,"i8"],[3,"statfs_fn"],[15,"i64"],[3,"MountInfo"],[3,"FsUsage"],[15,"u8"],[3,"Lines"],[8,"BufRead"],[3,"Pattern"],[3,"PatternError"],[3,"Parser"],[4,"ParseSizeError"],[3,"Duration"],[3,"Command"],[8,"Args"],[4,"VerbosityLevel"],[3,"Verbosity"],[4,"TraverseSymlinks"],[3,"ChownExecutor"],[6,"Result"],[3,"ExitStatus"],[4,"Quotes"],[4,"QuotingStyle"],[3,"Range"],[4,"Ordering"],[3,"RingBuffer"],[3,"DigestWriter"],[3,"Blake2b"],[3,"Blake3"],[3,"Sm3"],[3,"CRC"],[3,"BSD"],[3,"SYSV"],[3,"Md5"],[3,"Sha1"],[3,"Sha224"],[3,"Sha256"],[3,"Sha384"],[3,"Sha512"],[3,"Sha3_224"],[3,"Sha3_256"],[3,"Sha3_384"],[3,"Sha3_512"],[3,"Shake128"],[3,"Shake256"],[3,"Utmpx"],[3,"UtmpxIter"],[3,"utmpx"],[3,"OffsetDateTime"],[15,"i16"],[8,"Quotable"],[8,"Locate"],[8,"FromIo"],[8,"UClapError"],[8,"FsMeta"],[8,"BirthTime"],[4,"IfFrom"],[8,"ChildExt"],[13,"Shell"],[13,"C"],[13,"Literal"],[8,"Digest"]]},\
"uucore_procs":{"doc":"","t":[14,14,14,23],"n":["help_about","help_section","help_usage","main"],"q":["uucore_procs","","",""],"d":["Get the about text from the help file.","Reads a section from a file of the util as a <code>str</code> literal.","Get the usage from the help file.",""],"i":[0,0,0,0],"f":[0,0,0,0],"p":[]},\
"uudoc":{"doc":"","t":[3,6,11,11,11,11,12,11,11,11,11,11,11,5,11,11,5,11,12,11,12,11,11,12,11,11,11,11,5,12,11,11,12],"n":["MDWriter","UtilityMap","additional","after_help","borrow","borrow_mut","command","deref","deref_mut","description","drop","examples","from","get_zip_content","init","into","main","markdown","markdown","markdown_section","name","options","platforms","tldr_zip","try_from","try_into","type_id","usage","util_map","utils_per_platform","version","vzip","w"],"q":["uudoc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1],"f":[0,0,[1,2],[1,2],[[]],[[]],0,[3],[3],[1,2],[3],[1,2],[[]],[[4,5],[[7,[6]]]],[[],3],[[]],[[],2],[1,2],0,[[1,5],[[7,[6]]]],0,[1,2],[1,2],0,[[],8],[[],8],[[],9],[1,2],[[],[[10,[5]]]],0,[1,2],[[]],0],"p":[[3,"MDWriter"],[6,"Result"],[15,"usize"],[3,"ZipArchive"],[15,"str"],[3,"String"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Map"]]},\
"vdir":{"doc":"","t":[5],"n":["main"],"q":["vdir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"wc":{"doc":"","t":[5],"n":["main"],"q":["wc"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"who":{"doc":"","t":[5],"n":["main"],"q":["who"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"whoami":{"doc":"","t":[5],"n":["main"],"q":["whoami"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"yes":{"doc":"","t":[5],"n":["main"],"q":["yes"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
